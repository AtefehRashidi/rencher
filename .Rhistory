library(palmerpenguins)
library(DynNom)
fit <- lm(bill_length_mm~bill_depth_mm, data = penguins)
DynNom(fit, penfguins,  covariate =  "numeric")
library(palmerpenguins)
library(DynNom)
fit <- lm(bill_length_mm~bill_depth_mm, data = penguins)
DynNom(fit, penguins,  covariate =  "numeric")
#DynNom(model, df,  covariate =  "numeric")
#| code-fold: show
Breast_Cancer <- read_excel("E:/MUI/Datasets/Breast Cancer METABRIC.xlsx")
#| code-fold: show
#| message: false
#| warning: false
library(readxl)
library(tidyverse)
library(survival)
library(flexsurv)
library(DynNom)
#| code-fold: show
Breast_Cancer <- read_excel("E:/MUI/Datasets/Breast Cancer METABRIC.xlsx")
Breast_Cancer |> head(n = 10)
Breast_Cancer |> names()
#| code-fold: show
#|
df <- na.omit(df)
df <-  df[df$Time >0, ]
#| code-fold: show
df  <-  Breast_Cancer |>
select(Time = "Overall Survival (Months)", Status = "Overall Survival Status",
Age = "Age at Diagnosis", Chemotherapy  = "Chemotherapy", Size = "Tumor Size",
Surgery =  "Type of Breast Surgery", HTherapy  = "Hormone Therapy",  )
str(df)
#| code-fold: show
#|
df <- na.omit(df)
df <-  df[df$Time >0, ]
df$Status <- ifelse(df$Status == "Deceased", 1, 0)
df$Chemotherapy <- ifelse(df$Chemotherapy == "No", 0, 1)
df$HTherapy  <- ifelse(df$Chemotherapy == "No", 0, 1)
df$Surgery  <- ifelse(df$Surgery == "Breast Conserving", 0, 1)
df$Chemotherapy <- factor(df$Chemotherapy , labels = c("No","Yes") ,
levels = c(0,1))
df$HTherapy <- factor(df$HTherapy , labels = c("Breast Conserving","Mastectomy") ,
levels = c(0,1))
str(df)
model = coxph(Surv(Time, Status)~Age+Size, data = df)
model |>
summary()
model |> cox.zph()
library(DynNom)
DynNom(model, df,  covariate =  "numeric")
library(DynNom)
DynNom(model)
str(df$Time)
str(df$Status)
DynNom(model, data = df)
model = coxph(Surv(Time, Status)~Age+Size, data = df, x = TRUE, y = TRUE)
model |>
summary()
library(DynNom)
DynNom(model, data = df)
DynNom(model, data = df, covariate = "numeric")
model = coxph(Surv(Time, Status)~Age+Size, data = df, x = TRUE, y = TRUE)
model
DynNom(model, data = df, covariate = "numeric")
sum(is.na(df$Time))
sum(is.na(df$Status))
testdata <- data.frame(
time = c(5, 10, 15, 20, 25, 30),
status = c(1, 0, 1, 0, 1, 0),
age = c(50, 60, 70, 65, 55, 45),
size = c(2, 3, 4, 2, 3, 5),
grade = factor(c(1, 2, 3, 1, 2, 3))
)
cox_model <- coxph(Surv(time, status) ~ age + size + grade,
data = testdata,
x = TRUE,
y = TRUE)
dynNom(cox_model)
DynNom(cox_model)
df
is.numeric(df$Status)
is.numeric(df$Time)
unique(df$Time)
summary(df$Time)
sum
sum(df$Time<=0)
df
str(df)
#| code-fold: show
#|
df <- na.omit(df)
df <-  df[df$Time >0, ]
df$Status <- ifelse(df$Status == "Deceased", 1, 0)
df$Chemotherapy <- ifelse(df$Chemotherapy == "No", 0, 1)
df$HTherapy  <- ifelse(df$Chemotherapy == "No", 0, 1)
df$Surgery  <- ifelse(df$Surgery == "Breast Conserving", 0, 1)
df$Chemotherapy <- factor(df$Chemotherapy , labels = c("No","Yes") ,
levels = c(0,1))
df$HTherapy <- factor(df$HTherapy , labels = c("Breast Conserving","Mastectomy") ,
levels = c(0,1))
df$Surgery <- factor(df$Surgery, levels = c(0,1), labels = c("No","Yes"))
str(df)
model = coxph(Surv(Time, Status)~Age+Size, data = df, x = TRUE, y = TRUE)
model |>
summary()
#| code-fold: show
Breast_Cancer <- read_excel("E:/MUI/Datasets/Breast Cancer METABRIC.xlsx")
Breast_Cancer |> head(n = 10)
#| code-fold: show
df  <-  Breast_Cancer |>
select(Time = "Overall Survival (Months)", Status = "Overall Survival Status",
Age = "Age at Diagnosis", Chemotherapy  = "Chemotherapy", Size = "Tumor Size",
Surgery =  "Type of Breast Surgery", HTherapy  = "Hormone Therapy",  )
str(df)
#| code-fold: show
#|
df <- na.omit(df)
df <-  df[df$Time >0, ]
df$Status <- ifelse(df$Status == "Deceased", 1, 0)
df$Chemotherapy <- ifelse(df$Chemotherapy == "No", 0, 1)
df$HTherapy  <- ifelse(df$Chemotherapy == "No", 0, 1)
df$Surgery  <- ifelse(df$Surgery == "Breast Conserving", 0, 1)
df$Chemotherapy <- factor(df$Chemotherapy , labels = c("No","Yes") ,
levels = c(0,1))
df$HTherapy <- factor(df$HTherapy , labels = c("Breast Conserving","Mastectomy") ,
levels = c(0,1))
df$Surgery <- factor(df$Surgery, levels = c(0,1), labels = c("No","Yes"))
str(df)
model = coxph(Surv(Time, Status)~Age+Size, data = df, x = TRUE, y = TRUE)
model |>
summary()
library(DynNom)
DynNom(model, data = df, covariate = "numeric")
str(df)
model <- coxph(
Surv(Time, Status) ~ Age + Chemotherapy + Size + Surgery + HTherapy,
data = df,
x = TRUE,
y = TRUE
)
DynNom(model, data = df, covariate = "numeric")
summary(df$Size)
summary(df$Age)
summary(df$Time)
summary(df$Status)
levels(df$Chemotherapy)
levels(df$HTherapy)
levels(df$Surgery)
df$Age <- as.numeric(as.character(df$Age))
df$Size <- as.numeric(as.character(df$Size))
df$Time <- as.numeric(as.character(df$Time))
df$Status <- as.numeric(as.character(df$Status))
model <- coxph(
Surv(Time, Status) ~ Age + Chemotherapy + Size + Surgery + HTherapy,
data = df,
x = TRUE,
y = TRUE
)
# اجرای dynNom
dynNom(model, data = df, covariate = "numeric")
DynNom(model, data = df, covariate = "numeric")
df =  as.data.frame(df)
model <- coxph(
Surv(Time, Status) ~ Age + Chemotherapy + Size + Surgery + HTherapy,
data = df,
x = TRUE,
y = TRUE
)
# اجرای dynNom
DynNom(model, data = df, covariate = "numeric")
#| code-fold: show
#| message: false
#| warning: false
library(readxl)
library(tidyverse)
library(survival)
library(flexsurv)
library(DynNom)
#| code-fold: show
#| message: false
#| warning: false
library(readxl)
library(tidyverse)
library(survival)
library(flexsurv)
library(DynNom)
#| code-fold: show
Breast_Cancer <- read_excel("E:/MUI/Datasets/Breast Cancer METABRIC.xlsx")
Breast_Cancer |> head(n = 10)
Breast_Cancer |> names()
#| code-fold: show
df  <-  Breast_Cancer |>
select(Time = "Overall Survival (Months)", Status = "Overall Survival Status",
Age = "Age at Diagnosis", Chemotherapy  = "Chemotherapy", Size = "Tumor Size",
Surgery =  "Type of Breast Surgery", HTherapy  = "Hormone Therapy",  )
str(df)
#| code-fold: show
#|
df <- na.omit(df)
df <-  df[df$Time >0, ]
df$Status <- ifelse(df$Status == "Deceased", 1, 0)
df$Chemotherapy <- ifelse(df$Chemotherapy == "No", 0, 1)
df$HTherapy  <- ifelse(df$Chemotherapy == "No", 0, 1)
df$Surgery  <- ifelse(df$Surgery == "Breast Conserving", 0, 1)
df$Chemotherapy <- factor(df$Chemotherapy , labels = c("No","Yes") ,
levels = c(0,1))
df$HTherapy <- factor(df$HTherapy , labels = c("Breast Conserving","Mastectomy") ,
levels = c(0,1))
df$Surgery <- factor(df$Surgery, levels = c(0,1), labels = c("No","Yes"))
df =  as.data.frame(df)
str(df)
#| code-fold: show
surv_obj <- Surv(time = df$Time, event = df$Status)
fit_exp     <- flexsurvreg(surv_obj ~ 1, data = df, dist = "exponential")
fit_weibull <- flexsurvreg(surv_obj ~ 1, data = df, dist = "weibull")
fit_lognorm <- flexsurvreg(surv_obj ~ 1, data = df, dist = "lognormal")
fit_loglog  <- flexsurvreg(surv_obj ~ 1, data = df, dist = "llogis")
# AIC comparison
aic_values <- AIC(fit_exp, fit_weibull, fit_lognorm, fit_loglog)
aic_values
paste("The minimum AIC value = ",min(aic_values$AIC))
#| code-fold: show
par(mfrow = c(2,2))
p1 <- plot(fit_exp, main = "exp")
#| code-fold: show
par(mfrow = c(2,2))
p1 <- plot(fit_exp, main = "exp")
#| code-fold: show
par(mfrow = c(2,2))
p1 <- plot(fit_exp, main = "exp")
p2 <- plot(fit_loglog, main = "loglog")
p3 <- plot(fit_lognorm, main = "lognorm")
p4 <- plot(fit_weibull, main = "weibull")
model = coxph(Surv(Time, Status)~., data = df, x = TRUE, y = TRUE)
model |>
summary()
model |> cox.zph()
library(DynNom)
DynNom(model, data = df, covariate = "numeric")
model = coxph(Surv(Time, Status)~., data = df, x = TRUE, y = TRUE)
model |>
summary()
model |> cox.zph()
library(DynNom)
DynNom(model, data = df, covariate = "numeric")
table13.1 <- read_excel("C:/Users/Administrator/Dropbox/package/Datasets/table13.1.xlsx")
library(readxl)
library(usethis)
table13.1 <- read_excel("C:/Users/Administrator/Dropbox/package/Datasets/table13.1.xlsx")
use_data(table13.1, overwrite = TRUE)
## ch 6
table6.22 <- read_excel("C:/Users/Administrator/Dropbox/package/Datasets/table6.22.xlsx")
use_data(table6.22, overwrite = TRUE)
sample(6,1)
#.....................
devtools::check()
devtools::check()
load("C:/Users/Administrator/Dropbox/Package rencher/rencher/data/table6.27.rda")
devtools::install()
devtools::install()
devtools::install()
devtools::install()
library(rencher)
data(package = "rencher")
data("table6.27", rencher)
data("table6.27", "rencher")
data("table6.27", package = "rencher")
devtools::build()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_readme_rmd()
devtools::build()
devtools::build()
devtools::build()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
devtools::build()
devtools::check()
devtools::build()
plot(model,
main = "Hazard Ratios with 95% CI",
xlab = "Log(Hazard Ratio)",
col = "purple")
model = coxph(Surv(Time, Status)~., data = df)
library(readxl)
savedrecs_61_ <- read_excel("C:/Users/Administrator/Desktop/داده ها/savedrecs (61).xls")
df <- read_excel("C:/Users/Administrator/Desktop/داده ها/savedrecs (61).xls")
library(bibliometrix)
names(data)
names(df)
library(tidyverse)
clean_keywords <- function(x) {
x <- tolower(x)  # کوچکسازی همه
x <- str_replace_all(x, "-", " ")  # جایگزینی خط تیره با فاصله
x <- str_replace_all(x, "emerging infectious disease[s]*", "emerging infectious disease")
x <- str_replace_all(x, "climate change", "climate change")
x <- str_replace_all(x, "global warming", "climate change")
x <- str_replace_all(x, "global change", "climate change")
x <- str_replace_all(x, "zoonoses", "zoonotic disease")
x <- str_replace_all(x, "vector borne disease[s]*", "vector-borne disease")
x <- str_squish(x)  # حذف فاصلههای اضافه
return(x)
}
# اعمال روی ستونها
df$`Author Keywords` <- clean_keywords(df$`Author Keywords`)
df$`Keywords Plus` <- clean_keywords(df$`Keywords Plus`)
na_summary <- colSums(is.na(df) | df == "")
print(na_summary)
library(dplyr)
df <- df %>%
filter(!is.na(`Article Title`), !is.na(`Publication Year`))
df <- df %>%
filter(!(is.na(`Author Keywords`) & is.na(`Keywords Plus`)))
# پر کردن مقادیر گمشده در ستونهای متنی با مقدار مشخص
df$Abstract[is.na(df$Abstract)] <- "No abstract available"
df$`Affiliations`[is.na(df$`Affiliations`)] <- "Unknown"
df$DOI[is.na(df$DOI)] <- "Not available"
df$`Email Addresses`[is.na(df$`Email Addresses`)] <- "Not provided"
df$`Author Keywords`[is.na(df$`Author Keywords`)] <- ""
df$`Keywords Plus`[is.na(df$`Keywords Plus`)] <- ""
# حذف ستونهای فرعی با مقدار زیاد NA
cols_to_drop <- c("Meeting Abstract", "Book Authors", "Group Authors",
"Book Author Full Names", "Conference Sponsor",
"Special Issue", "Book DOI", "Early Access Date",
"Cited References", "Part Number")
df <- df %>% select(-all_of(cols_to_drop))
na_summary <- sapply(df, function(x) sum(is.na(x)))
print(na_summary)
nrow(df)
View(df)
library(openxlsx)
write.xlsx(df, "df.xlsx")
getwd()
table(df$`Email Addresses`)
table(df$`Email Addresses`=="Not provided")
table(df$DOI=="Not provided")
library(readxl)
df <- read_excel("C:/Users/Administrator/Desktop/داده ها/savedrecs (61).xls")
library(bibliometrix)
# تبدیل به فرمت کتاب‌سنجی
df_biblio <- convert2df(df, dbsource = "wos", format = "csv")  # یا dbsource = "scopus" در صورت نیاز
# تبدیل به فرمت کتاب‌سنجی
df <- convert2df(df, dbsource = "wos", format = "csv")
# تبدیل به فرمت کتاب‌سنجی
df <- convert2df(df, dbsource = "wos", format = "xlsx")
library(readxl)
df <- read_excel("C:/Users/Administrator/Desktop/df.xlsx")
library(bibliometrix)
# تبدیل به فرمت کتاب‌سنجی
df <- convert2df(df, dbsource = "wos", format = "xlsx")
write.csv(df, "df.xlsx")
library(readxl)
df <- read_excel("C:/Users/Administrator/Desktop/df.csv")
biblioshiny()
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df2.csv", dbsource = "wos", format = "csv")
# انجام تحلیل کتاب‌سنجی
results <- biblioAnalysis(df_biblio, sep = ";")
write.csv(df, "df.csv", row.names = F)
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df.csv", dbsource = "wos", format = "csv")
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df", dbsource = "wos", format = "xlsx")
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df.xlsx", dbsource = "wos", format = "xlsx")
head(df)
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df2.csv", dbsource = "wos", format = "csv")
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df2.csv", dbsource = "scopus", format = "csv")
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df.xlsx", dbsource = "scopus", format = "xlsx")
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df.csv", dbsource = "scopus", format = "csv")
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df.csv", dbsource = "scopus", format = "csv")
head(df,5)
df <- as.data.frame(df)
df_biblio <- data.frame(
TI = df$Article Title,       # Title
df_biblio <- data.frame(
TI = df$`Article Title`,       # Title
AU = df$Authors,               # Authors
SO = df$`Source Title`,        # Source (Journal)
DE = df$`Author Keywords`,     # Author Keywords
AB = df$Abstract,              # Abstract
PY = df$`Publication Year`,    # Year
TC = df$`Times Cited, WoS Core` # Cited count (اگر هست)
)
results <- biblioAnalysis(df_biblio, sep = ";")
# 2. افزودن متادیتا ساختگی برای فریب تابع biblioAnalysis
attr(df_biblio, "class") <- c("bibliodata", "data.frame")
attr(df_biblio, "db") <- "wos"  # یا "scopus" اگر فرمت نزدیک‌تر باشه
# 3. اجرای تحلیل
results <- biblioAnalysis(df_biblio, sep = ";")
attr(df_biblio, "db") <- "scopus"  # یا "scopus" اگر فرمت نزدیک‌تر باشه
# 3. اجرای تحلیل
results <- biblioAnalysis(df_biblio, sep = ";")
biblioshiny()
# تبدیل داده‌ها به فرمت کتاب‌سنجی
df_biblio <- convert2df("df.csv", dbsource = "scopus", format = "plaintext")
#.....................
devtools::check()
devtools::build_readme()
#.....................
devtools::check()
usethis::use_build_ignore("README.Rmd")
#.....................
devtools::check()
devtools::check()
devtools::install()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::install()
devtools::build()
devtools::check()
devtools::document()
load("C:/Users/Administrator/Dropbox/Package rencher/rencher/data/table4.2.rda")
library(readxl)
library(usethis)
#ch 4
table4.2 <- read_excel("C:/Users/Administrator/Dropbox/package/Datasets/table4.2.xlsx")
use_data(table4.2, overwrite = TRUE)
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools
devtools::build()
devtools::build()
devtools::load_all(".")
devtools::document()
devtools::build()
devtools::load_all(".")
devtools::document()
devtools::build()
devtools::load_all(".")
devtools::build()
devtools::load_all(".")
devtools::document()
devtools::build()
devtools::check()
devtools::load_all(".")
devtools::document()
devtools::build()
devtools::check()
devtools::check()
devtools::load_all(".")
devtools::document()
devtools::build()
devtools::check()
devtools::build()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::build()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
table6.17 <- read_excel("C:/Users/Administrator/Dropbox/package/Datasets/table6.17.xlsx")
use_data(table6.17, overwrite = TRUE)
devtools::document()
devtools::load_all(".")
devtools::build()
devtools::check()
devtools::document()
devtools::load_all(".")
devtools::build()
devtools::check()
devtools::document()
devtools::clean_dll()
devtools::build()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
nchar(Datasets from the Book "Methods of Multivariate Analysis (3rd)")
nchar("Datasets from the Book "Methods of Multivariate Analysis (3rd)"")
nchar("Datasets from the Book Methods of Multivariate Analysis (3rd)")
devtools::document()
devtools::check()
devtools::build()
devtools::check_built(path = "rencher_0.1.3.tar.gz", args = "--as-cran")
devtools::check( args = "--as-cran")
tools::toTitleCase(Datasets from the Book "Methods of Multivariate Analysis (3rd)")
tools::toTitleCase(Datasets from the Book Methods of Multivariate Analysis (3rd))
tools::toTitleCase(Datasets from the Book Methods of Multivariate Analysis (3rd))
devtools::document()
devtools::check()
devtools::build()
